function XinRanAnalysis2_Sweep(varargin)
% Xintrinsic continuous sweep based session analysis
%   S.TrlNumTotal is supposed to be 1
%   Stimulation is supposed to vary a feature continuously in a cycle

global A D T
%% Get preprocessed ('*_P?.mat') file
if nargin ==0
    % Calling from direct running of the function
    A.RunningSource =   'D';
    [A.FileName, F.PathName, A.FilterIndex] = uigetfile(...
                        'W:\*_P?.mat',...
                        'Select a "_P1.mat" file to process');
    if A.FilterIndex == 0
        clear A;
        return
    end
    if iscell(A.FileName) == 0  % single file selected
        A.FileName =    {A.FileName};
    end
else
    A.RunningSource =   'S';
    % Calling from another script
    [F.PathName, A.FileName, A.FileExt] = fileparts(varargin{1});
    F.PathName =        [F.PathName, '\'];
    A.FileName =        {[A.FileName, A.FileExt]};
end
%% Load data files
Xin.T.filename = [F.PathName, A.FileName{1}];     
global P S
load([Xin.T.filename(1:end-7) '.mat'], 'S');	% load S (Saved from recording)
load([Xin.T.filename(1:end-4) '.mat'], 'P');	% load P (Preprocessed)  
if S.TrlNumTotal == 1
    disp([  'Analyzing session: "', A.FileName{1}, ...
            '" with the sound: "', S.SesSoundFile, '"']);
else
    disp([  'Session: "', A.FileName{1}, ...
            '" with the sound: "', S.SesSoundFile, '" is not a Sweep based session.']);
    return
end
switch A.FileName{1}([15:17 end-15:end-7])
    case 'NIR_Ring_PBS';    T.Polarity =    -1;     T.PseudoDelay =	2.6;
    case 'NIR_Pola_PBS';    T.Polarity =    -1;     T.PseudoDelay =	2.6;
    case 'Far_Pola_PBS';    T.Polarity =     1;     T.PseudoDelay =	2.6;
    case 'FRe_Pola_PBS';    T.Polarity =     1;     T.PseudoDelay =	2.6;
    case 'Red_Pola_PBS';    T.Polarity =     1;     T.PseudoDelay =	2.6;
    case 'Yel_Pola_PBS';    T.Polarity =     1;     T.PseudoDelay =	2.6;
    case 'Amb_Pola_PBS';    T.Polarity =     1;     T.PseudoDelay =	2.6;
    case 'Gre_Pola_PBS';    T.Polarity =    -1;     T.PseudoDelay =	2.6;
    case 'Blu_Pola_PBS';    T.Polarity =    -1;     T.PseudoDelay =	2.6;
    case 'Blu_Fluo_GFP';    T.Polarity =     1;     T.PseudoDelay = 0.0;
    otherwise;              T.Polarity =     1;     T.PseudoDelay =	2.6;
end
%% Figure 1: ROI
T.S_FS =        [120 90];	% Space, Figure Side
    T.hFig1 = figure(...
                    'Name',         ['Determine the ROI in the session "', A.FileName{1}(1:end-7), '"'],...
                    'Units',        'pixels',...  
                    'Position',     [   10,                     10,...
                                        T.S_FS(1)*2+P.ProcPixelWidth*5,...
                                        T.S_FS(2)*2+P.ProcPixelHeight*5 ]);
    T.hFig1Axes1 = axes(...
                    'Parent',       T.hFig1,...
                    'Units',        'pixels',...  
                    'Position',     [   T.S_FS(1),              T.S_FS(2),...
                                        P.ProcPixelWidth*5,     P.ProcPixelHeight*5 ]);
	T.hFig1Axes1Image1 = imagesc(	squeeze(P.ProcDataMat(1,1,:,:,1)) + ...             
                                    squeeze(P.ProcDataMat(end,end,:,:,end)),...
                    'Parent',       T.hFig1Axes1);    
	colormap(T.hFig1Axes1,          'gray');
    title(                       	'Drag to position the ROI, double click on the circle to finish');
    try 
        if strcmp(S.MkyPrep, 'Skull')
            T.hFig1Axes1ROI = imellipse(gca, [  0	0	121	76]);
        else
            T.hFig1Axes1ROI = imellipse(gca, [  23	0	76	76]);
        end
    catch
            T.hFig1Axes1ROI = imellipse(gca, [  23	0	76	76]);            
    end 
    if A.RunningSource == 'D'
        wait(T.hFig1Axes1ROI);
    end
    title(                          'Done, start calculating...');
    drawnow;
%% Setup Parmateters: Data & Numbers 
D.N_Ph =            P.ProcPixelHeight;      % Number_PixelHeight
D.N_Pw =            P.ProcPixelWidth;       % Number_PixelWidth
D.N_Pt =            D.N_Ph * D.N_Pw;        % Number_PixelTotal(in each frame in the P?.mat)
D.N_PhSelect =      37;
D.N_PwSelect =      60;

D.N_Ft =            P.ProcFrameNumTotal;            % Number_FrameTotal
D.N_Fpc =           D.N_Ft / S.SesCycleNumTotal;	% Number_FramePerCycle
D.N_Fpt =           D.N_Fpc / S.TrlNumTotal;        % Number_FramePerTrial
D.N_Ftpreoff =      round(  S.TrlDurPreStim *               P.ProcFrameRate); 
                                                    % Number_FrameTrialPrestimOff
D.N_Ftstimon =      D.N_Ftpreoff + 1;               % Number_FrameTrialStimOn
D.N_Ftstimoff =     round(( S.TrlDurPreStim+S.TrlDurStim) * P.ProcFrameRate);
                                                    % Number_FrameTrialStimOff
D.N_Ftposton =      D.N_Ftstimoff + 1;              % Number_FrameTrialPostimON
try
    if S.SysCamFrameRate ~=80
        D.N_Fps =	S.SysCamFrameRate/P.ProcFrameBinNum;	% Number_FramePerSecond
    else
        D.N_Fps =	80/P.ProcFrameBinNum;
    end
catch
        D.N_Fps =	80/P.ProcFrameBinNum;
end
D.N_Tpf =           1/D.N_Fps;              % Number_TimePerFrame
D.N_Ct =            S.SesCycleNumTotal;     % Number_CycleTotal (in the session)
                        
% Region of Interest
D.PhPw_ROIin =          createMask(T.hFig1Axes1ROI);            % ROI in
D.PhPw_ROIout =         ~D.PhPw_ROIin;                          % ROI out
D.Pt_ROIin =            reshape(D.PhPw_ROIin,     D.N_Pt, []);  % ROI in 
D.Pt_ROIout =           reshape(D.PhPw_ROIout,    D.N_Pt, []);  % ROI out
D.PtIndex_ROIin =       find(D.Pt_ROIin);

% Temporal Analysis

% Spectral AnalysisFpt
D.N_Qt =                D.N_Ft;         % Number_FrequencyTotal
D.N_Qfc =               D.N_Ct +1;      % Number_FrequencyOfTheCycle  
D.Qt_Freqs =            0:  1/(D.N_Ft/D.N_Fps): (D.N_Ft-1)/(D.N_Ft/D.N_Fps); 
T.PtQt_ROIin =          D.Pt_ROIin *     ones(1,   length(D.Qt_Freqs));    
T.PtQt_ROIout =         D.Pt_ROIout *    ones(1,   length(D.Qt_Freqs));
T.FptCtPhPw_DataRaw =   reshape( permute(P.ProcDataMat, [5 2 1 3 4]),...
                                D.N_Fpt, D.N_Ct, D.N_Ph, D.N_Pw );
T.FtPt_DataRaw =        reshape(T.FptCtPhPw_DataRaw,	D.N_Ft,	D.N_Pt);  
T.PhPw_ImageMeanRaw =   squeeze(mean(mean(T.FptCtPhPw_DataRaw, 1), 2));
T.OnePt_ImageMeanRaw =	reshape(T.PhPw_ImageMeanRaw, 1, D.N_Pt);

%% Variance Analysis 
T.N_IntScaleLim =           [0 1];
T.N_StdScaleLim =           [0.0001,  0.1];
T.N_StdScaleLimLog =        log10(T.N_StdScaleLim);
T.N_StdScaleTickLog =       T.N_StdScaleLimLog(1):1:T.N_StdScaleLimLog(2);
T.N_StdScaleTickLabels =	cellfun(@(x) sprintf('%5.2f%%', x), num2cell(100*10.^T.N_StdScaleTickLog),...
                            'UniformOutput',    false); 
D.Fig2Var{1}.Title =        'Average intensity (% to saturation)';
D.Fig2Var{1}.ColorMap =     'gray';  
D.Fig2Var{1}.PhPw_Data =	squeeze(mean(mean(T.FptCtPhPw_DataRaw, 1),  2)) / (2^12*4^2 *P.ProcPixelBinNum^2 *P.ProcFrameBinNum);
D.Fig2Var{2}.Title =        'STD, entire session';
D.Fig2Var{2}.ColorMap =     'parula';
D.Fig2Var{2}.PhPw_Data =	reshape(std(T.FtPt_DataRaw, 0, 1), D.N_Ph, D.N_Pw)  ./T.PhPw_ImageMeanRaw;
D.Fig2Var{3}.Title =        'STD, across repetition cycles';
D.Fig2Var{3}.ColorMap =     'parula';
D.Fig2Var{3}.PhPw_Data =	squeeze(std(mean(T.FptCtPhPw_DataRaw, 1), 0, 2))    ./T.PhPw_ImageMeanRaw ;
D.Fig2Var{4}.Title =        'STD, across frames within cycle';
D.Fig2Var{4}.ColorMap =     'parula'; 
D.Fig2Var{4}.PhPw_Data =	squeeze(std(mean(T.FptCtPhPw_DataRaw, 2), 0, 1))    ./T.PhPw_ImageMeanRaw ;

%% Spectral Analysis  
% Power meter
T.OneQt_PowerFFTRaw =   fft(P.ProcMeanPower);
T.OneQt_PowerFFTAmp =   abs(T.OneQt_PowerFFTRaw)*sqrt(2)/D.N_Qt / T.OneQt_PowerFFTRaw(1);
% Camera: normalized
D.FtPt_NormSes =	T.FtPt_DataRaw./(ones(D.N_Ft, 1)*T.OnePt_ImageMeanRaw) - 1;
D.PtQt_FFTRaw =     fft(T.Polarity * D.FtPt_NormSes)';     
D.PtQt_FFTAmp =     abs(        D.PtQt_FFTRaw)*sqrt(2)/D.N_Qt;	
                                % Amp: mirror combined, thus sqrt(2)
D.PtQt_FFTAgl =     mod(angle(	D.PtQt_FFTRaw)- ...
                        T.PseudoDelay*ones(D.N_Pt,1)*D.Qt_Freqs*2*pi, 2*pi);
                                % Agl: phase in [0, 2*pi], with
                                % pseudo-delay compensated
if contains(lower(S.SesSoundFile), 'down')
    D.PtQt_FFTAgl =	2*pi - D.PtQt_FFTAgl;
end                             % Reverse the angle for DOWN cycle 
% collapse across pixels
D.OneQt_FFTAmpMeanOut =     sum(D.PtQt_FFTAmp.*T.PtQt_ROIout)/  sum(D.Pt_ROIout);
D.OneQt_FFTAmpMeanIn =      sum(D.PtQt_FFTAmp.*T.PtQt_ROIin)/   sum(D.Pt_ROIin);
D.OneQt_FFTAmpMeanPStdIn =	D.OneQt_FFTAmpMeanIn + std(D.PtQt_FFTAmp(D.PtIndex_ROIin,:),1);
    % the locking frequency, Prepare the raw hue, sat, val
        % S.TrlDurPreStim =   2.5;
        % S.TrlDurStim =      15;
    D.PtOne_Hue =	D.PtQt_FFTAgl(:,D.N_Qfc)/(2*pi);
    D.PtOne_Hue =	(D.PtOne_Hue-S.TrlDurPreStim/S.TrlDurTotal) /...
                        (S.TrlDurStim/S.TrlDurTotal);   % match the Stimulus ONSET / OFFSET to 0-1
    D.PtOne_Sat =	ones(D.N_Pt,1);          
    D.PtOne_Val =	D.PtQt_FFTAmp(:,D.N_Qfc); 
D.PhPwThree_TuneMap =   zeros(D.N_Ph, D.N_Pw,3);
% Spectrum scale
T.N_SpecXTick =         [D.Qt_Freqs(D.N_Ct+1),  mean(D.Qt_Freqs([2, end]))]; 
T.N_SpecYTick =         [0 0.00025*2.^(0:8)];
T.N_SpecYTickLabel =	cellfun(@(x) sprintf('%5.3f%%', x), num2cell(round(100000*T.N_SpecYTick)/1000),...
                            'UniformOutput',    false); 
T.N_SpecDotX =          D.Qt_Freqs(D.N_Ct+1);
T.N_SpecDotY =          T.N_SpecYTick( find(T.N_SpecYTick>max( [...
                            D.OneQt_FFTAmpMeanOut(      D.N_Ct+1),...
                            D.OneQt_FFTAmpMeanIn(       D.N_Ct+1),...    
                            D.OneQt_FFTAmpMeanPStdIn(   D.N_Ct+1)]),1));                   
%% Trial Analysis
% Pixel nomalized in the session by the mean of all frames 
% D.PtFt_NormSes =        T.PtFt_DataRaw./(T.PtOne_ImageMeanRaw*ones(1, D.N_Ft)) - 1;
% D.FptCtPhPw_NormSes =	permute( reshape(D.PtFt_NormSes, ...
%                                     D.N_Ph, ...
%                                     D.N_Pw, ...
%                                     D.N_Fpt, ...
%                                     D.N_Ct), [3, 4, 1, 2]);
D.FptCtPhPw_NormSes =	reshape(D.FtPt_NormSes, D.N_Fpt, D.N_Ct, D.N_Ph, D.N_Pw);
% Pixel nomalized in the session by the mean of prestim/all frames 
if D.N_Ftpreoff >0
    D.OneCtPhPw_PreMean = mean( D.FptCtPhPw_NormSes(1:D.N_Ftpreoff, :, :, :), 1);   % with pre-stim time as baseline
else
    D.OneCtPhPw_PreMean = mean( D.FptCtPhPw_NormSes(1:end,          :, :, :), 1);	% continuous, so total average us baseline
end
D.FptCtPhPw_NormTrl =   (D.FptCtPhPw_NormSes+1)./(repmat(D.OneCtPhPw_PreMean, D.N_Fpt,1,1,1)+1) -1;	% for Axes: Pixl           
D.FptPhPw_NormTrl =     squeeze(mean(D.FptCtPhPw_NormTrl, 2));
D.FptPt_NormTrl =       reshape(D.FptPhPw_NormTrl, D.N_Fpt, D.N_Pt);                                % for Axes: Temp
    T.TempMax =             max(max(abs(D.FptPt_NormTrl(:,:,:)))); 
D.PtIn_STD =            squeeze(std(D.FptPt_NormTrl(:,D.PtIndex_ROIin), 1));
D.PtIn_STD_max =        max(D.PtIn_STD);
D.PtIn_STD_mean =       mean(D.PtIn_STD);
D.FptPhPw_NormTrlAdj =  D.FptPhPw_NormTrl*T.Polarity;                                               % for Axes: Frme

%% Graphics
% Figure
T.VarMag =	2.0;        D.N_PwVar = D.N_Pw*T.VarMag;    D.N_PhVar = D.N_Ph*T.VarMag;              
T.ImgMag =	3.0;        D.N_PwImg = D.N_Pw*T.ImgMag;    D.N_PhImg = D.N_Ph*T.ImgMag; 
T.S_BA =        [60 90];    % Space, Between Axes
T.S_B =         10;         % Space, Between Axes
T.S_CB =        60;         % Space, ColorBar
T.S_CBW =       10;         % Space, ColorBarWidth
T.FontSizeS =   8;
T.FontSizeL =   10;
delete(T.hFig1);
T.hFig2 = figure(...
                'Name',         ['"', A.FileName{1}, '" with the sound: "', S.SesSoundFile, '"'],...
                'Units',        'pixels',...  
                'Position',     [   10,                     10, ...
                                    T.S_FS(1)*2+(T.S_BA(1)*2)*3+D.N_PwVar*4, ...
                                    T.S_FS(2)*2+(T.S_BA(2)*1)*2+D.N_PhVar*1+D.N_PhImg*2] );
%% Varience                               
for i = 1:4
    T.hFig2AxesVar(i) = axes(...
                'Parent',       T.hFig2,...
                'Units',        'pixels',...  
                'Position',     [   T.S_FS(1)+  (T.S_BA(1)*2)*(i-1	)+  D.N_PwVar*(i-1	), ...
                                    T.S_FS(2), ...
                                    D.N_PwVar,  D.N_PhVar],...
                'Tag',          [num2str(i), 'Var']);
    if strcmp(D.Fig2Var{i}.Title(1:3), 'STD')
        imagesc(    log10(      D.Fig2Var{i}.PhPw_Data)    );
        caxis(                  T.N_StdScaleLimLog);
    else
        imagesc(                D.Fig2Var{i}.PhPw_Data     );
        caxis(                  T.N_IntScaleLim);
    end
    set(gca,    'XTick',        []);
    set(gca,    'YTick',        []);
    colormap(   T.hFig2AxesVar(i), D.Fig2Var{i}.ColorMap);
    T.hFig2AxesVarColorbar(i) = colorbar(...
                'peer',         T.hFig2AxesVar(i),...
                'Units',        'pixels',...
                'Position',     [   T.S_FS(1)+  (T.S_BA(1)*2)*(i-1  )+  D.N_PwVar*(i    )+ T.S_CBW, ...
                                    T.S_FS(2), ...
                                    T.S_CBW,        D.N_PhVar]);                     
    if strcmp(D.Fig2Var{i}.Title(1:3), 'STD')
        set(T.hFig2AxesVarColorbar(i),...
                'Ticks',        T.N_StdScaleTickLog,...
                'TickLabels',   T.N_StdScaleTickLabels);
    else
        set(T.hFig2AxesVarColorbar(i),...
                'Ticks',        0:0.2:1,...
                'TickLabels',   {'0%', '20%', '40%', '60%', '80%', '100%'});
    end
    T.hFig2AxesVarTitle(i) = title(D.Fig2Var{i}.Title);
    xlabel( {[  'Max for all:    ',     sprintf('%5.2f%%', max(max(D.Fig2Var{i}.PhPw_Data))*100 ) ],...
             [  'Mean inside: ',        sprintf('%5.2f%%', sum(sum(D.Fig2Var{i}.PhPw_Data.*D.PhPw_ROIin))/sum(D.Pt_ROIin)*100 ) ],...
             [  'Min for all:     ',	sprintf('%5.2f%%', min(min(D.Fig2Var{i}.PhPw_Data))*100 ) ]},...
                'FontSize',     T.FontSizeS);
end
set(T.hFig2AxesVarTitle(1),...
                'Tag',          'TitlBase',...
                'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
%% Axes 1:1, Spectrum
T.hFig2AxesSpec = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...                      
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(0  )+D.N_PwImg*(0  ), ...
                                T.S_FS(2)+T.S_BA(2)*(1  )+D.N_PhImg*(0  )+D.N_PhVar*(1  ), ...
                                D.N_PwImg       D.N_PhImg],...
            'NextPlot',     'add');
    plot(D.Qt_Freqs, D.OneQt_FFTAmpMeanIn);
    plot(D.Qt_Freqs, D.OneQt_FFTAmpMeanOut);
    plot(D.Qt_Freqs, D.OneQt_FFTAmpMeanPStdIn, 'b:');
T.hFig2AxesSpecPixlSelect = ...
    plot(D.Qt_Freqs, D.PtQt_FFTAmp(D.N_PhSelect + D.N_PwSelect*D.N_Ph,:));
    plot(D.Qt_Freqs, T.OneQt_PowerFFTAmp);
T.hFig2AxesSpecDot = plot(T.N_SpecDotX, T.N_SpecDotY, 'o',...
            'MarkerSize',   5,...
            'Color',        [1 0 0]);
set(gca,    'XTick',        T.N_SpecXTick,... 
            'XLim',         [D.Qt_Freqs(2)  mean(D.Qt_Freqs([2, end]))],...
            'YLim',         [0              T.N_SpecDotY],...
            'YTick',        T.N_SpecYTick,...
            'YTickLabel',   T.N_SpecYTickLabel,...
            'XGrid',        'on',...
            'XScale',       'log',...
            'LabelFontSizeMultiplier', 1);
T.hFig2AxesSpecXLabel = xlabel({['Frequency (Hz)']},...
            'Parent',       gca,...
            'VerticalAlignment',    'middle');
T.hFig2AxesSpecYLabel = ylabel({['Amplitude']},...
            'Parent',       gca,...
            'VerticalAlignment',    'Bottom',...
            'Tag',          'AmpSpectrum',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
T.hFig2AxesSpecTitle = title('Spectrum of signal, pixel or average across pixels',...
            'Tag',          'TitlSpec',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
legend(     {'In ROI mean', 'Out ROI mean', 'In ROI mean+std', 'Selected pixel', 'Power meter'},...
            'Location',     'Northeast',...
            'FontSize',     T.FontSizeS);
legend('boxoff'); 
T.hFig2AxesSpecHid = axes(...
            'Parent',       T.hFig2,... 
            'Units',        'pixels',...                        
            'Position',     get(T.hFig2AxesSpec, 'position'),...
            'Color',        'none',...
            'XLim',         [0 1],...
            'YLim',         [0 1],...
            'XTick',        [],...
            'YTick',        []);
T.hFig2AxesSpecTextNum =    text(   0.98,    0.97, sprintf('Rep#:%d',D.N_Ct),...
            'Parent',       T.hFig2AxesSpecHid,...
            'FontSize',     T.FontSizeS,...
            'HorizontalAlignment',	'right');
T.hFig2AxesSpecTextRight =  text(   0.95,   0.9, '>',...
            'Parent',       T.hFig2AxesSpecHid,...
            'FontSize',     T.FontSizeS,...
            'FontWeight',   'Bold',...
            'Tag',          'SpecNumUp',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
T.hFig2AxesSpecTextLeft =   text(   0.05,   0.9, '<',...
            'Parent',       T.hFig2AxesSpecHid,...
            'FontSize',     T.FontSizeS,...
            'FontWeight',   'Bold',...
            'Tag',          'SpecNumDown',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
        
%% Axes: 2:1, Phase Histogram
T.hFig2AxesHist = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...      
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(0  )+D.N_PwImg*(0  ), ...
                                T.S_FS(2)+T.S_BA(2)*(2  )+D.N_PhImg*(1  )+D.N_PhVar*(1  ), ...
                                D.N_PwImg       D.N_PhImg],...
            'NextPlot',     'add',...
            'LabelFontSizeMultiplier', 1); 
T.hFig2AxesHistHistogramAll =   histogram(...
	squeeze(D.PtQt_FFTAgl(:,21)), pi*(0:1/16:2),...
            'Parent',       T.hFig2AxesHist);
T.hFig2AxesHistHistogramIn =    histogram(...
    squeeze(D.PtQt_FFTAgl(D.PtIndex_ROIin,21)), pi*(0:1/16:2),...
            'Parent',       T.hFig2AxesHist);
set(T.hFig2AxesHist,...
            'XLim',         [0 2*pi],...
            'XTick',        (0:0.25:2)*pi,...
            'XTickLabels',  {   '0.00\pi', '0.25\pi', '0.50\pi', '0.75\pi',...
                                '1.00\pi', '1.25\pi', '1.50\pi', '1.75\pi',...
                                '2.00\pi'},...
            'XTickLabelRotation',   45);
xlabel(sprintf('Phase, %3.1f s compensated', T.PseudoDelay));
ylabel('Pixel count');
T.hFig2AxesHistTitle = title('Phase, histogram among pixels',...
            'Tag',          'TitlHist',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
legend(     {'All pixels', 'In ROI'},...
            'Location',     'Northwest',...
            'FontSize',     T.FontSizeS,...
            'Box',          'off');

%% Axes: 1:2 Phase, tuning map
T.hFig2AxesTune = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...                      
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(1  )+D.N_PwImg*(1  ), ...
                                T.S_FS(2)+T.S_BA(2)*(1  )+D.N_PhImg*(0  )+D.N_PhVar*(1  ), ...
                                D.N_PwImg       D.N_PhImg],...
            'NextPlot',     'add',...
            'LabelFontSizeMultiplier', 1);   
T.hFig2AxesTuneTitle = title('Phase, tuning map',...
            'Tag',          'TitlTune',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
T.hFig2AxesTuneImage = image(T.hFig2AxesTune, D.PhPwThree_TuneMap,...
            'Tag',          'PixlSelectionFromTuneImage',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
set(T.hFig2AxesTune, ...
            'YDir',         'reverse',...
            'XLim',         [1 D.N_Pw],...
            'YLim',         [1 D.N_Ph],...
            'XTick',        [],...
            'YTick',        []);
xlabel(sprintf('Hue: %3.1f s compensated phase angle; Value: phase amplitude', T.PsuedoDelay));
% Scalebar: Hue
T.hFig2AxesTuneFakeHue = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...  
            'Position',     get(T.hFig2AxesTune, 'position'),...
            'Visible',     'off'); 
colormap(   T.hFig2AxesTuneFakeHue, 'hsv');                     caxis( [0 1]);
T.hFig2SpecScalebarHue = colorbar(...
            'peer',         T.hFig2AxesTuneFakeHue,...
            'Units',        'pixels',...
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(1  )+D.N_PwImg*(2  )+10, ...
                                T.S_FS(2)+T.S_BA(2)*(1  )+D.N_PhImg*(0  )+D.N_PhVar*(1  ), ...
                                10                  D.N_PhImg],...
            'Ticks',        [],...
            'Tag',          'TuneScalebarHue',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
% Scalebar: Saturation
T.hFig2AxesTuneFakeSat = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...  
            'Position',     get(T.hFig2AxesTune, 'position'),...
            'Visible',      'off'); 
colormap(   T.hFig2AxesTuneFakeSat,...
        hsv2rgb([1/3*ones(64,1) (0:1/63:1)' 0.5*ones(64,1)]) );	caxis( [0 1]);
T.hFig2SpecScalebarSat = colorbar(...
            'peer',         T.hFig2AxesTuneFakeSat,...
            'Units',        'pixels',...
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(1  )+D.N_PwImg*(2  )+40, ...
                                T.S_FS(2)+T.S_BA(2)*(1  )+D.N_PhImg*(0  )+D.N_PhVar*(1  ), ...
                                10                  D.N_PhImg],...
            'Ticks',        [],...
            'Tag',          'TuneScalebarSat',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown'); 
% Scalebar: Value
T.hFig2AxesTuneFakeVal = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...  
            'Position',     get(T.hFig2AxesTune, 'position'),...
            'Visible',      'off'); 
colormap(   T.hFig2AxesTuneFakeVal,  'gray');     caxis( [0 1]);
T.hFig2SpecScalebarVal = colorbar(...
            'peer',         T.hFig2AxesTuneFakeVal,...
            'Units',        'pixels',...
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(1  )+D.N_PwImg*(2  )+70, ...
                                T.S_FS(2)+T.S_BA(2)*(1  )+D.N_PhImg*(0  )+D.N_PhVar*(1  ), ...
                                10                  D.N_PhImg],...
            'Ticks',        [],...
            'Tag',          'TuneScalebarVal',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');

%% Axes: 2:2, Frme: Frame at a given time point        
T.hFig2AxesFrme = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...  
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(1  )+D.N_PwImg*(1  ), ...
                                T.S_FS(2)+T.S_BA(2)*(2  )+D.N_PhImg*(1  )+D.N_PhVar*(1  ), ...
                                D.N_PwImg,	D.N_PhImg],...
            'LabelFontSizeMultiplier', 1);  
T.hFig2AxesFrmeImage = imagesc(squeeze(D.FptPhPw_NormTrlAdj(1,:,:)),...
            'Parent',       T.hFig2AxesFrme,...
            'Tag',          'PixlSelectionFromFrmeImage',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
T.hFig2AxesFrmeXLabelH = xlabel(...
    sprintf('Amplitude @ %4.1f s, in adjusted polarity, click to play', 1*D.N_Tpf),...
            'Parent',       gca,...
            'VerticalAlignment',    'Top', ...
            'Tag',          'Playback',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
T.hFig2AxesFrmeTitle = title('Frame, at a given time point',...
            'Tag',          'TitlFrme',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
set(T.hFig2AxesFrme,'XTick',        []);
set(T.hFig2AxesFrme,'YTick',        []);            
colormap(   T.hFig2AxesFrme, 'jet');
T.hFig2AxesFrmeScalebar = colorbar(...
            'peer',         T.hFig2AxesFrme,...
            'Units',        'pixels',...
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(1  )+D.N_PwImg*(2  )+10, ...
                                T.S_FS(2)*(3  )+D.N_Ph*(1  )*T.ImgMag+D.N_Ph*(1)*T.VarMag, ...
                                10,                     D.N_PhImg],...   
            'Limits',       0.05*[-1 1],...
            'Tag',          'FrmeScalebar',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
set(gca,    'LabelFontSizeMultiplier', 1);

%% Axes: 1:3, Temp: Temporal traces for all IN pixels
% 'Average temporal response of a sound cycle';
T.hFig2AxesTemp = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...  
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(4  )+D.N_PwImg*(2  ), ...
                                T.S_FS(2)+T.S_BA(2)*(1  )+D.N_PhImg*(0  )+D.N_PhVar*(1  ), ...
                                D.N_PwImg,	D.N_PhImg],...
            'LabelFontSizeMultiplier', 1); 
plot(   (1:D.N_Fpt)*D.N_Tpf, D.FptPt_NormTrl(:,D.PtIndex_ROIin)   );
set(gca,    'XLim',         D.N_Tpf*    [0 D.N_Fpt]);    
if      D.N_Ftpreoff >0 && D.N_Ftposton<D.N_Fpt
    set(gca,'XTick',        D.N_Tpf*    [0 D.N_Ftpreoff D.N_Ftstimoff D.N_Fpt]); 
elseif	D.N_Ftpreoff >0 
    set(gca,'XTick',        D.N_Tpf*    [0 D.N_Ftpreoff D.N_Fpt]);
elseif	D.N_Ftposton<D.N_Fpt
    set(gca,'XTick',        D.N_Tpf*    [0 D.N_Ftstimoff D.N_Fpt]);  
else
    set(gca,'XTick',        D.N_Tpf*    [0 D.N_Fpt]);
end      
xlabel({['Trial time (s)'] },...
            'Parent',       gca,...
            'VerticalAlignment',    'middle');
ylabel({'Norm. signal, in raw polarity'},...
            'Parent',       gca,...
            'VerticalAlignment',    'Middle');
title('Temporal, averaged trace');
set(gca,    'XGrid',        'on',... 
            'LabelFontSizeMultiplier', 1);
T.hFig2AxesTempHid = axes(...
            'Parent',       T.hFig2,... 
            'Units',        'pixels',...                        
            'Position',     get(T.hFig2AxesTemp, 'position'),...
            'Color',        'none',...
            'XLim',         [0 D.N_Fpt],...
            'YLim',         [0 1],...
            'XTick',        [],...
            'YTick',        [],...
            'NextPlot',     'add');
text(   D.N_Fpt*0.04,	0.03, {'STD:'...
    sprintf('Max:  %5.2f%%',	100*D.PtIn_STD_max),...
    sprintf('Mean:%5.2f%%',     100*D.PtIn_STD_mean) },...
            'Parent',       T.hFig2AxesTempHid,...
            'FontSize',     T.FontSizeS,...
            'HorizontalAlignment',	'Left',...
            'VerticalAlignment',	'Bottom');
T.hFig2AxesTempTextNum =    text(   D.N_Fpt*0.04,	0.97, sprintf('@%4.1fs',0.2),...
            'Parent',       T.hFig2AxesTempHid,...
            'FontSize',     T.FontSizeS,...
            'HorizontalAlignment',	'Left');
T.hFig2AxesTempTextRight =  text(   D.N_Fpt*0.95,   0.9, '>',...
            'Parent',       T.hFig2AxesTempHid,...
            'FontSize',     T.FontSizeS,...
            'FontWeight',   'Bold',...
            'Tag',          'TempFrmeUp',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');
T.hFig2AxesTempTextLeft =   text(   D.N_Fpt*0.05,   0.9, '<',...
            'Parent',       T.hFig2AxesTempHid,...
            'FontSize',     T.FontSizeS,...
            'FontWeight',   'Bold',...
            'Tag',          'TempFrmeDown',...
            'ButtonDownFcn','XinRanAnalysis2_Sweep_ButtonDown');            
T.hFig2AxesTempDot = plot(1, 1, 'o',...
            'Parent',       T.hFig2AxesTempHid,...
            'MarkerSize',   5,...
            'Color',        [1 0 0]);
%% Axes: 2:3, Pixl: Temporal traces for a selected pixel
T.hFig2AxesPixl = axes(...
            'Parent',       T.hFig2,...
            'Units',        'pixels',...  
            'Position',     [   T.S_FS(1)+T.S_BA(1)*(4  )+D.N_PwImg*(2  ), ...
                                T.S_FS(2)+T.S_BA(2)*(2  )+D.N_PhImg*(1  )+D.N_PhVar*(1  ), ...
                                D.N_PwImg,	D.N_PhImg],...
            'NextPlot',     'add');  
T.hFig2AxesPixlLineAll = plot(   D.N_Tpf*   (1:D.N_Fpt),...
        squeeze( D.FptCtPhPw_NormTrl(:,:,D.N_PhSelect,D.N_PwSelect) ),...
            'Parent',       T.hFig2AxesPixl,...
            'LineWidth',    0.5);
for i = 1:D.N_Ct
	T.hFig2AxesPixlLineAll(i).Color = ...
        hsv2rgb( [ 0.8*(i-1)/D.N_Ct, 0.8*[1 1] ] );
end
T.hFig2AxesPixlLineMean = plot(   D.N_Tpf*  (1:D.N_Fpt),...
        mean(squeeze( D.FptCtPhPw_NormTrl(:,:,D.N_PhSelect,D.N_PwSelect) ),2),...
            'Parent',       T.hFig2AxesPixl,...
            'LineWidth',    2,...
            'Color',        [0 0 0]);   
xlabel({['Trial time (s)'] },...
            'Parent',       gca,...
            'VerticalAlignment',    'middle');
ylabel({'Norm. signal, in raw polarity'},...
            'Parent',       gca,...
            'VerticalAlignment',    'Middle');   
T.hFig2AxesPixlTitle = title(...
    sprintf('Pixel(%dH,%dW): temporal traces across reps', D.N_PhSelect,D.N_PwSelect) ); 
set(gca,    'XLim',         D.N_Tpf*    [0 D.N_Fpt]); 
set(gca,    'XTick',        get(T.hFig2AxesTemp,    'XTick'));
set(gca,    'XGrid',        'on',... 
            'LabelFontSizeMultiplier', 1);  
T.hFig2AxesPixlHid = axes(...
            'Parent',       T.hFig2,... 
            'Units',        'pixels',...                        
            'Position',     get(T.hFig2AxesPixl, 'position'),...
            'Color',        'none',...
            'XLim',         [0 D.N_Fpt],...
            'YLim',         [0 1],...
            'XTick',        [],...
            'YTick',        [],...
            'NextPlot',     'add');
T.hFig2AxesPixlText = text(   D.N_Fpt*0.04,	0.97, {...
    sprintf('Across-all:      %5.2f%%', 100*std(reshape(D.FptCtPhPw_NormTrl(:,:,D.N_PhSelect,D.N_PwSelect), 1, []))),...
    sprintf('Across-rep:    %5.2f%%',	100*std(mean(D.FptCtPhPw_NormTrl(:,:,D.N_PhSelect,D.N_PwSelect), 2), 0, 1)),...
    sprintf('Across-frame:%5.2f%%',     100*std(mean(D.FptCtPhPw_NormTrl(:,:,D.N_PhSelect,D.N_PwSelect), 1), 0, 2)),...
    'on STD'},...
            'Parent',       T.hFig2AxesPixlHid,...
            'FontSize',     T.FontSizeS,...
            'HorizontalAlignment',	'Left',...
            'VerticalAlignment',	'Cap');
%% Setup Data
% Axes: Spec
setappdata(T.hFig2AxesSpecYLabel,   'SpecH',            T.hFig2AxesSpec);
setappdata(T.hFig2AxesSpecYLabel,   'YLimRange',        T.N_SpecYTick(3:end));
setappdata(T.hFig2AxesSpecYLabel,   'SpecDotH',         T.hFig2AxesSpecDot);
setappdata(T.hFig2AxesSpecTextRight,'UpDown',           +1);
setappdata(T.hFig2AxesSpecTextLeft, 'UpDown',           -1);
setappdata(T.hFig2AxesSpecTextRight,'SpecH',            T.hFig2AxesSpec);
setappdata(T.hFig2AxesSpecTextLeft, 'SpecH',            T.hFig2AxesSpec);
setappdata(T.hFig2AxesSpecTextRight,'TuningH',          T.hFig2AxesTuneImage);
setappdata(T.hFig2AxesSpecTextLeft, 'TuningH',          T.hFig2AxesTuneImage);
setappdata(T.hFig2AxesSpec,         'SpecNum',          D.N_Qfc);
setappdata(T.hFig2AxesSpec,         'SpecAmp',          single(D.PtQt_FFTAmp));
setappdata(T.hFig2AxesSpec,         'SpecAgl',          single(D.PtQt_FFTAgl));
setappdata(T.hFig2AxesSpec,         'SpecDotH',         T.hFig2AxesSpecDot);
setappdata(T.hFig2AxesSpec,         'SpecRepNumH',      T.hFig2AxesSpecTextNum);
setappdata(T.hFig2AxesSpec,         'SpecSesDurTotal',  S.SesDurTotal);
setappdata(T.hFig2AxesSpec,         'Spec_N_Qfc',       D.N_Qfc);
setappdata(T.hFig2AxesSpec,         'Spec_RatioCut_Qfc',S.TrlDurPreStim/S.TrlDurTotal);
% setappdata(T.hFig2AxesSpec,         'HistH',            T.hFig2AxesHist);
setappdata(T.hFig2AxesSpec,         'HistogramAllH',	T.hFig2AxesHistHistogramAll);
setappdata(T.hFig2AxesSpec,         'HistogramInH',     T.hFig2AxesHistHistogramIn);
setappdata(T.hFig2AxesSpec,         'PtIndexROIin',     D.PtIndex_ROIin);

% Axes: Tune 
setappdata(T.hFig2SpecScalebarHue,  'TuningH',          T.hFig2AxesTuneImage);
setappdata(T.hFig2SpecScalebarSat,  'TuningH',          T.hFig2AxesTuneImage);
setappdata(T.hFig2SpecScalebarVal,  'TuningH',          T.hFig2AxesTuneImage);           
setappdata(T.hFig2AxesTuneImage,    'AxesPixlH',        T.hFig2AxesPixl);         
setappdata(T.hFig2AxesTuneImage,    'RawHue',           single(D.PtOne_Hue));
setappdata(T.hFig2AxesTuneImage,    'RawSat',           single(D.PtOne_Sat));
setappdata(T.hFig2AxesTuneImage,    'RawVal',           single(D.PtOne_Val));
setappdata(T.hFig2AxesTuneImage,    'HueMapOptions', {  'HSLuvCircular',...
                                                        'HSLuvLinear'});        % 'HSLuvZigZag'
setappdata(T.hFig2AxesTuneImage,    'HueMapOrder',      1);
setappdata(T.hFig2AxesTuneImage,    'HueMap',           'HSLuvCircular');
setappdata(T.hFig2AxesTuneImage,    'HueTempolate',     []);
setappdata(T.hFig2AxesTuneImage,    'HueColorMap',      []);
setappdata(T.hFig2AxesTuneImage,    'HueAxesH',         T.hFig2AxesTuneFakeHue);    
setappdata(T.hFig2AxesTuneImage,    'SatParaRange', [   0   0   0   0   1   1   1;
                                                        1   1   1   0   0   1   1;
                                                        0   0.6 -10 0   0   0.6 0]);
setappdata(T.hFig2AxesTuneImage,    'SatParaOrder',     2);
setappdata(T.hFig2AxesTuneImage,    'SatValSync',       0);
setappdata(T.hFig2AxesTuneImage,    'SatGroundOut',     1);
setappdata(T.hFig2AxesTuneImage,	'SatGroundTime',	0);
setappdata(T.hFig2AxesTuneImage,    'SatStimTime',      S.TrlDurStim);
setappdata(T.hFig2AxesTuneImage,    'ValLimRange',      0.025/100*2.^(0:0.5:7));
setappdata(T.hFig2AxesTuneImage,    'ValLimOrder',      5); 
setappdata(T.hFig2AxesTuneImage,	'ValLim',           0.1/100);   
        
% Axes: Frme
setappdata(T.hFig2AxesFrmeImage,	'FrmeNum',          1);
setappdata(T.hFig2AxesFrmeImage,    'FptPhPw_NormTrlAdj',  single(D.FptPhPw_NormTrlAdj));
setappdata(T.hFig2AxesFrmeImage,    'XLabelH',          T.hFig2AxesFrmeXLabelH);         
setappdata(T.hFig2AxesFrmeImage,    'AxesPixlH',        T.hFig2AxesPixl);      
setappdata(T.hFig2AxesFrmeScalebar, 'Tmax',             0.2); 
setappdata(T.hFig2AxesFrmeScalebar, 'TmaxRange',        [   0.005   0.01    0.02 ...
                                                            0.05    0.1     0.2]); 
setappdata(T.hFig2AxesFrmeScalebar, 'AxesFrmeH',        T.hFig2AxesFrme); 
setappdata(T.hFig2AxesFrmeScalebar, 'AxesTempH',        T.hFig2AxesTemp); 
setappdata(T.hFig2AxesFrmeScalebar, 'AxesPixlH',        T.hFig2AxesPixl); 
setappdata(T.hFig2AxesFrmeTitle,    'FrmeNextH',        T.hFig2AxesTempTextRight);
setappdata(T.hFig2AxesFrmeTitle,    'PlayingNow',       0);
setappdata(T.hFig2AxesFrmeTitle,    'Sound',            S.SesSoundWave);   

% Axes: Pixl
setappdata(T.hFig2AxesPixl,         'FptCtPhPw_NormTrl',single(D.FptCtPhPw_NormTrl));
setappdata(T.hFig2AxesPixl,         'LineAllH',         T.hFig2AxesPixlLineAll);
setappdata(T.hFig2AxesPixl,         'LineMeanH',        T.hFig2AxesPixlLineMean);

% Axes: Temp
setappdata(T.hFig2AxesTempTextRight,'UpDown',           +1);
setappdata(T.hFig2AxesTempTextLeft, 'UpDown',           -1);
setappdata(T.hFig2AxesTempTextRight,'TempHidH',         T.hFig2AxesTempHid);
setappdata(T.hFig2AxesTempTextLeft, 'TempHidH',         T.hFig2AxesTempHid);
setappdata(T.hFig2AxesTempTextRight,'FrmeImageH',       T.hFig2AxesFrmeImage);
setappdata(T.hFig2AxesTempTextLeft, 'FrmeImageH',       T.hFig2AxesFrmeImage);

setappdata(T.hFig2AxesTempHid,      'TempDotH',         T.hFig2AxesTempDot);
setappdata(T.hFig2AxesTempHid,      'TempTextH',        T.hFig2AxesTempTextNum);
setappdata(T.hFig2AxesTempHid,      'FrmeDuration',     P.ProcFrameBinNum/80);

% Updates
% drawnow;                                  
XinRanAnalysis2_Sweep_ButtonDown(T.hFig2SpecScalebarHue);         
XinRanAnalysis2_Sweep_ButtonDown(T.hFig2SpecScalebarSat);       
XinRanAnalysis2_Sweep_ButtonDown(T.hFig2SpecScalebarVal); 
XinRanAnalysis2_Sweep_ButtonDown(T.hFig2AxesFrmeScalebar);  
% XinRanAnalysis2_Sweep_ButtonDown(T.hFig2AxesSpecYLabel);

%% Save
% savefig(T.hFig2, [F.PathName,A.FileName{1}(1:end-4) '_Sweep.fig'], 'compact');
